
IF(__INTIME)
  RETURN()
ENDIF()
SET(__INTIME 1)

SET(WIN32 0)

SET(MSVC 1)

SET(CMAKE_GENERATOR_PLATFORM "INtime")

set(CMAKE_STATIC_LIBRARY_PREFIX "")
set(CMAKE_STATIC_LIBRARY_SUFFIX ".lib")
set(CMAKE_SHARED_LIBRARY_PREFIX "")
set(CMAKE_SHARED_LIBRARY_SUFFIX ".rsl")
set(CMAKE_IMPORT_LIBRARY_PREFIX "")
set(CMAKE_IMPORT_LIBRARY_SUFFIX ".lib")
set(CMAKE_EXECUTABLE_SUFFIX ".rta")
set(CMAKE_LINK_LIBRARY_SUFFIX ".lib")
set(CMAKE_DL_LIBS "")

set(CMAKE_FIND_LIBRARY_PREFIXES "")
set(CMAKE_FIND_LIBRARY_SUFFIXES ".lib")

set(CMAKE_LINK_LIBRARY_FLAG "")
set(CMAKE_LIBRARY_PATH_FLAG "-LIBPATH:")

set(CMAKE_BUILD_TYPE_INIT Debug)

FILE(TO_CMAKE_PATH $ENV{PROGRAMFILES}/INtime INTIME_PATH)

INCLUDE_DIRECTORIES(${INTIME_PATH}/rt/include/network7)
INCLUDE_DIRECTORIES(${INTIME_PATH}/rt/include/cpp)
INCLUDE_DIRECTORIES(${INTIME_PATH}/rt/include)
LINK_DIRECTORIES(${INTIME_PATH}/rt/lib)
SET(CMAKE_C_STANDARD_LIBRARIES_INIT rtppd.lib cpplib.lib) # For C++ support
SET(CMAKE_C_STANDARD_LIBRARIES_INIT ${CMAKE_C_STANDARD_LIBRARIES_INIT} rt.lib pcibus.lib netlib.lib clib.lib vshelper.lib traceapi.lib hpeif2.lib)
SET(CMAKE_C_STANDARD_LIBRARIES_INIT ${CMAKE_C_STANDARD_LIBRARIES_INIT} iwin32.lib) # Win32 API support

SET(CMAKE_CXX_STANDARD_LIBRARIES_INIT ${CMAKE_C_STANDARD_LIBRARIES_INIT})

SET(CMAKE_EXE_LINKER_FLAGS_INIT "/NODEFAULTLIB /MANIFEST:NO /INCREMENTAL:NO /ASSEMBLYDEBUG:DISABLE /VERSION:21076.20053 /SAFESEH:NO")
SET(CMAKE_EXE_LINKER_FLAGS_DEBUG_INIT "${CMAKE_EXE_LINKER_FLAGS_INIT} /DEBUG")
SET(CMAKE_EXE_LINKER_FLAGS_RELEASE_INIT ${CMAKE_EXE_LINKER_FLAGS_INIT})
SET(CMAKE_SHARED_LINKER_FLAGS_INIT ${CMAKE_EXE_LINKER_FLAGS_INIT})
SET(CMAKE_SHARED_LINKER_FLAGS_DEBUG_INIT ${CMAKE_EXE_LINKER_FLAGS_DEBUG_INIT})
SET(CMAKE_SHARED_LINKER_FLAGS_RELEASE_INIT ${CMAKE_EXE_LINKER_FLAGS_RELEASE_INIT})
SET(CMAKE_MODULE_LINKER_FLAGS_INIT ${CMAKE_EXE_LINKER_FLAGS_INIT})
SET(CMAKE_MODULE_LINKER_FLAGS_DEBUG_INIT ${CMAKE_EXE_LINKER_FLAGS_DEBUG_INIT})
SET(CMAKE_MODULE_LINKER_FLAGS_RELEASE_INIT ${CMAKE_EXE_LINKER_FLAGS_RELEASE_INIT})

MACRO(INtime_compiler_MSVC lang)
  # /X        => Do not use default libraries
  # /TP       => Compile for C++
  # /MT       => Multithreaded lib
  # /EHa      => Enable C++ Exceptions with SEH
  # /GR       => Enable Run-Time Type Information (needed by libjson-rpc)
  # /Od       => No optimization
  # /Gy-      => Disable Funtion-Leve Linking
  # /openmp-  => Disable OpenMP
  SET(CMAKE_${lang}_FLAGS_INIT "/X /MT /EHa /GR /Od /Gy- /openmp- /GF -D__C99__ -D__INTIME__ -DVS7_CPP -D_HAS_NAMESPACE -DEC_INTIME_VERSION=400 /W3")
  SET(CMAKE_${lang}_FLAGS_DEBUG_INIT "/Zi -D_DEBUG")

  SET(CMAKE_${lang}_FLAGS ${CMAKE_${lang}_FLAGS_INIT})
  SET(CMAKE_${lang}_FLAGS_DEBUG ${CMAKE_${lang}_FLAGS_INIT_DEBUG})

  STRING (REGEX REPLACE "/RTC(su|[1su])" "" CMAKE_${lang}_FLAGS "${CMAKE_${lang}_FLAGS}")
  STRING (REGEX REPLACE "/RTC(su|[1su])" "" CMAKE_${lang}_FLAGS_DEBUG "${CMAKE_${lang}_FLAGS_DEBUG}")
ENDMACRO()

INtime_compiler_MSVC(C)
INtime_compiler_MSVC(CXX)
